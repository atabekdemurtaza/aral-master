# Generated by Django 3.0.2 on 2020-03-02 03:36

import api.validators
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_ambassador_partner_teammember'), ('api', '0003_auto_20200208_0801'), ('api', '0004_auto_20200208_1034'), ('api', '0005_auto_20200209_2028'), ('api', '0006_auto_20200215_1658'), ('api', '0007_auto_20200215_1713'), ('api', '0008_youtubelink_snapshot'), ('api', '0009_auto_20200215_1743'), ('api', '0010_auto_20200215_1838'), ('api', '0011_auto_20200215_1845'), ('api', '0012_auto_20200215_1916'), ('api', '0013_auto_20200215_2019'), ('api', '0014_auto_20200215_2158'), ('api', '0015_auto_20200216_1841'), ('api', '0016_auto_20200225_1617'), ('api', '0017_auto_20200227_1947'), ('api', '0018_auto_20200229_1849'), ('api', '0019_auto_20200229_1907'), ('api', '0020_auto_20200229_2025'), ('api', '0021_auto_20200301_1241'), ('api', '0022_auto_20200301_1243'), ('api', '0023_auto_20200301_1332'), ('api', '0024_auto_20200301_1741'), ('api', '0025_auto_20200301_2137')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ambassador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=1000, verbose_name='Description')),
                ('avatar', models.ImageField(upload_to='ambassadors/', verbose_name='Avatar')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, default=datetime.datetime(2020, 2, 8, 8, 1, 10, 909412, tzinfo=utc), verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
            ],
            options={
                'verbose_name': 'Ambassador',
                'verbose_name_plural': 'Ambassadors',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(max_length=300, verbose_name='Question')),
                ('answer', models.TextField(max_length=1000, verbose_name='Answer')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=1000, verbose_name='Description')),
                ('avatar', models.ImageField(upload_to='team-members/', verbose_name='Avatar')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, default=django.utils.timezone.now, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
            },
        ),
        migrations.CreateModel(
            name='YouTubeLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('link', models.URLField(max_length=1000, verbose_name='Video Link')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('snapshot', models.ImageField(height_field='snapshot_height', upload_to='youtubelink-snapshot/', validators=[api.validators.ImageDimensionsValidator(height=600, width=800)], verbose_name='Snapshot', width_field='snapshot_width')),
                ('snapshot_height', models.IntegerField(verbose_name='Snapshot Height')),
                ('snapshot_width', models.IntegerField(verbose_name='Snapshot Width')),
            ],
            options={
                'verbose_name': 'YouTube Link',
                'verbose_name_plural': 'YouTube Links',
            },
        ),
        migrations.CreateModel(
            name='UsdRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(verbose_name='USD Rate')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'USD Rate',
                'verbose_name_plural': 'USD Rates',
            },
        ),
        migrations.CreateModel(
            name='LearnMore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('description', models.CharField(max_length=300, verbose_name='Description')),
                ('link', models.URLField(max_length=1000, verbose_name='Link')),
                ('background_image_width', models.IntegerField(verbose_name='Snapshot Width')),
                ('background_image_height', models.IntegerField(verbose_name='Snapshot Height')),
                ('background_image', models.ImageField(height_field='background_image_height', upload_to='learn-more-background/', validators=[api.validators.ImageDimensionsValidator(height=800, width=800)], verbose_name='Background Image', width_field='background_image_width')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Learn More Entry',
                'verbose_name_plural': 'Learn More Entries',
            },
        ),
        migrations.CreateModel(
            name='GreenChampion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Name')),
                ('logo', models.ImageField(upload_to='green-champion/', verbose_name='Logo')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('is_link_enabled', models.BooleanField(db_index=True, default=False, verbose_name='Is Link Enabled')),
                ('link', models.URLField(blank=True, max_length=1000, verbose_name='Link to Green Champion')),
            ],
            options={
                'verbose_name': 'Green Champion',
                'verbose_name_plural': 'Green Champions',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Name')),
                ('logo', models.ImageField(upload_to='partners/', verbose_name='Logo')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, default=django.utils.timezone.now, verbose_name='Created Date')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='Is Published')),
                ('is_link_enabled', models.BooleanField(db_index=True, default=False, verbose_name='Is Link Enabled')),
                ('link', models.URLField(blank=True, max_length=1000, verbose_name='Link to Partner')),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partners',
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Donation date')),
                ('amount', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Amount')),
                ('display_name', models.CharField(max_length=50, verbose_name='Display Name')),
                ('email', models.EmailField(max_length=80, verbose_name='Email')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone number')),
                ('message', models.CharField(blank=True, max_length=300, verbose_name='Message')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Is Anonymous')),
                ('is_gift', models.BooleanField(default=False, verbose_name='Is Gift')),
                ('payment_method', models.IntegerField(choices=[(1, 'PAYSYS'), (2, 'CLASSY'), (3, 'OFFLINE')], verbose_name='Payment method')),
                ('payment_currency', models.IntegerField(choices=[(1, 'UZS'), (2, 'USD')], default=1, verbose_name='Payment currency')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
            },
        ),
        migrations.CreateModel(
            name='PaySysTransaction',
            fields=[
                ('payment_environment', models.IntegerField(choices=[(1, 'LIVE'), (2, 'SANDBOX')], default=2, verbose_name='EVIRONMENT')),
                ('payment_agr_trans_id', models.IntegerField(blank=True, null=True, verbose_name='AGR_TRANS_ID')),
                ('payment_vendor_trans_id', models.AutoField(primary_key=True, serialize=False, verbose_name='VENDOR_TRANS_ID')),
                ('payment_merchant_trans_id', models.CharField(blank=True, max_length=50, verbose_name='MERCHANT_TRANS_ID')),
                ('payment_merchant_trans_amount', models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='MERCHANT_TRANS_AMOUNT')),
                ('payment_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='DATE')),
                ('display_name', models.CharField(max_length=50, verbose_name='Display Name')),
                ('email', models.EmailField(max_length=80, verbose_name='Email')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone number')),
                ('message', models.CharField(blank=True, max_length=300, verbose_name='Message')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Is Anonymous')),
                ('is_gift', models.BooleanField(default=False, verbose_name='Is Gift')),
                ('payment_status', models.IntegerField(choices=[(1, 'INITIATED'), (2, 'PAYED'), (3, 'CANCELED')], default=1, verbose_name='STATUS')),
                ('donation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Donation')),
            ],
            options={
                'verbose_name': 'PAYSYS Transaction',
                'verbose_name_plural': 'PAYSYS Transactions',
            },
        ),
    ]
